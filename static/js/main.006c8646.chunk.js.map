{"version":3,"sources":["serviceWorker.js","components/Logo/Logo.js","components/Logo/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Logo","this","props","className","withName","classNames","width","height","viewBox","xmlns","d","React","defaultProps","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qECbAC,E,iLASM,IAAD,EACyBC,KAAKC,MAA7BC,EADD,EACCA,UAAWC,EADZ,EACYA,SACnB,OACE,uBAAKD,UAAWE,IAAW,OAAQF,IACjC,uBACEA,UAAU,YACVG,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,MAAM,8BAEN,wBAAMC,EAAE,ybAETN,GACC,wBAAMD,UAAU,aAAhB,WACU,sC,GAxBDQ,aAAbX,EAKGY,aAAe,CACpBR,UAAU,GA0BCJ,ICpCAA,EDoCAA,EEtBAa,ICdAA,EDGf,WACE,OACE,uBAAKV,UAAU,OACb,0BAAQA,UAAU,cAChB,gBAAC,EAAD,OAEF,gE,cEJNW,EAASC,OAAO,gBAAC,EAAD,MAASC,SAASC,eAAe,SL2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.006c8646.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./Logo.scss\";\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass Logo extends React.Component {\n  static propTypes = {\n    withName: PropTypes.bool\n  };\n\n  static defaultProps = {\n    withName: true\n  };\n\n  render() {\n    const { className, withName } = this.props;\n    return (\n      <div className={classNames(\"Logo\", className)}>\n        <svg\n          className=\"Logo-icon\"\n          width=\"54px\"\n          height=\"54px\"\n          viewBox=\"0 0 54 54\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M29,23 L29,9 L31,9 L43,9 L45,9 L45,25 L43,25 L29,25 L29,23 Z M33,21 L41,21 L41,13 L33,13 L33,21 Z M0,52 L0,0 L2,0 L52,0 L54,0 L54,54 L52,54 L0,54 L0,52 Z M4,50 L50,50 L50,4 L4,4 L4,50 Z M39,29 L43,29 L43,45 L39,45 L39,29 Z M31,29 L35,29 L35,45 L31,45 L31,29 Z M21,25 L25,25 L25,37 L21,37 L21,25 Z M15,25 L19,25 L19,45 L15,45 L15,25 Z M9,25 L13,25 L13,37 L9,37 L9,25 Z M9,17 L25,17 L25,21 L9,21 L9,17 Z M12,9 L22,9 L22,13 L12,13 L12,9 Z\" />\n        </svg>\n        {withName && (\n          <span className=\"Logo-name\">\n            Chengqi <b>Zhu</b>\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Logo;\n","import Logo from \"./Logo\";\nexport default Logo;\n","import \"./App.scss\";\nimport * as React from \"react\";\nimport Logo from \"../Logo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Logo />\n      </header>\n      <h1>Chengqi's photography portfolio.</h1>\n    </div>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","import \"./index.scss\";\nimport * as React from \"react\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}